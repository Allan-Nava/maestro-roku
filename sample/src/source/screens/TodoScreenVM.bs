import "pkg:/source/roku_modules/maestro/mx/BaseViewModel.brs"

namespace screens
  class TodoScreenVM extends mx.BaseViewModel

    public focusedIndex = -1
    public focusedItem = invalid
    public items = createObject("roSGNode", "ContentNode")
    public isAutoCreateTimerActive = false
    public currentTitle = "none"
    public hasItems = false

    public function new()
      super("todoScreenVM")
      m.focusId = "addButton"
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    '++ Public api
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    public function addTodo()
      m.log.info("addTodo")
      currentCount = m.items.getChildCount()
      item = createObject("roSGNode", "ContentNode")
      item.title = "item " + stri(currentCount).trim()
      m.items.appendChild(item)
      m.focusItemAtIndex(m.items.getChildCount() - 1)
      m.hasItems = true
    end function

    public function removeTodo()
      m.log.method("removeTodo")
      if m.items.getChildCount() > 0
        m.items.removeChildrenIndex(1, m.items.getChildCount() - 1)
      else
        m.log.warn("tried to remove todo when items was empty!")
      end if
      m.focusItemAtIndex(m.items.getChildCount() - 1)
      m.hasItems = m.items.getChildCount() > 0
    end function

    public function onTimerFire()
      m.log.method("onTimerFire")
    end function

    public function focusItemAtIndex(newIndex)
      m.focusedIndex = newIndex
      m.focusedItem = m.items.getChild(newIndex)
      if m.focusedItem <> invalid
        m.currentTitle = `focused: ${m.focusedItem.title}`
      else
        m.currentTitle = "none"
      end if
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    '++ Key Handling
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    private function onKeyPressDown() as boolean
      m.log.verbose("press down focusId", m.focusId)

      if m.focusId = "addButton"
        m.focusId = "removeButton"
        return true
      else if m.focusId = "removeButton" and m.items.count() > 0
        m.focusId = "itemList"
        return true
      end if

      return false
    end function

    private function onKeyPressUp() as boolean
      m.log.verbose("press up focusId", m.focusId)

      if m.focusId = "itemList"
        m.focusId = "removeButton"
        return true
      else if m.focusId = "removeButton"
        m.focusId = "addButton"
        return true
      end if

      return false
    end function

    private function onKeyPressBack() as boolean
      m.log.verbose("press back focusId", m.focusId)

      if m.focusId = "itemList"
        m.focusId = "removeButton"
        return true
      end if

      return false
    end function

  end class
end namespace